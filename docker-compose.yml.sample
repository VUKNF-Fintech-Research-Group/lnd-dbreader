services:

  # Endpoint proxy to access the services
  lnd-dbreader-endpoint:
    container_name: lnd-dbreader-endpoint
    image: caddy:2-alpine
    read_only: true
    volumes:
      - ./endpoint/Caddyfile:/etc/caddy/Caddyfile:ro
      - ./DATA:/srv
    ports:
      - "80:80"
    restart: unless-stopped



  # LND Daemon
  lnd-dbreader-lnd:
    container_name: lnd-dbreader-lnd
    image: lightninglabs/lnd:v0.19.3-beta
    environment:
      - NETWORK=mainnet

      # Neutrino peers (https://bitnodes.io/nodes/?page=1&q=COMPACT)
      - NEUTRINO_CONNECT=185.70.43.194,176.9.17.121,167.235.9.82,176.9.150.253
      - FEE_URL=https://mempool.space/api/v1/fees/recommended
      - LNDHOST=lnd-dbreader-lnd
    volumes:
      - ./lnd/lnd:/root/.lnd
      - ./lnd/start-lnd.sh:/start-lnd.sh:ro
    entrypoint: ["/start-lnd.sh"]
    healthcheck:
      # Health check ensures LND is both synced to blockchain AND has at least one peer connected
      # Checks: 1) "synced_to_chain": true in getinfo, 2) count of "pub_key" entries > 0 in listpeers
      test: ["CMD-SHELL", "lncli --rpcserver=localhost:10009 --macaroonpath=/root/.lnd/data/chain/bitcoin/mainnet/admin.macaroon getinfo | grep -q '\"synced_to_chain\": true' && [ $(lncli --rpcserver=localhost:10009 --macaroonpath=/root/.lnd/data/chain/bitcoin/mainnet/admin.macaroon listpeers | grep -c '\"pub_key\"') -gt 0 ]"]
      interval: 30m
      timeout: 10s
      retries: 5
      start_period: 15m
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "10"
    restart: unless-stopped



  # LND Database Reader
  lnd-dbreader-dbreader:
    container_name: lnd-dbreader-dbreader
    image: lnd-dbreader-dbreader
    build: ./dbreader
    environment:
      MYSQL_HOST: lnd-dbreader-mysql
      MYSQL_DATABASE: lnd_data
      MYSQL_USER: lnd_data
      MYSQL_PASSWORD: lnd_data
    volumes:
      # - /etc/localtime:/etc/localtime:ro   # OPTIONAL: Use local time
      - ./lnd/lnd/data/graph/mainnet/:/data
    restart: unless-stopped



  # Database to store collected data
  lnd-dbreader-mysql:
    container_name: lnd-dbreader-mysql
    image: mysql:8.4.0
    user: 1000:1000
    read_only: true
    tmpfs:
      - /run/mysqld:uid=999,gid=999
      - /tmp
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: lnd_data
      MYSQL_USER: lnd_data
      MYSQL_PASSWORD: lnd_data
    volumes:
      # - /etc/localtime:/etc/localtime:ro   # OPTIONAL: Use local time
      - ./mysql/my.cnf:/etc/mysql/conf.d/my.cnf:ro
      - ./mysql/data:/var/lib/mysql
    restart: unless-stopped



  # Database browser to view the results
  lnd-dbreader-dbgate:
    container_name: lnd-dbreader-dbgate
    image: dbgate/dbgate:6.1.6-alpine
    read_only: false
    environment:
      WEB_ROOT: /dbgate

      ### OPTIONAL: Add authentication to the database browser
      # LOGINS: admin
      # LOGIN_PASSWORD_admin: admin

      CONNECTIONS: con1
      LABEL_con1: LND DB Reader
      SERVER_con1: lnd-dbreader-mysql
      USER_con1: root
      PASSWORD_con1: root
      PORT_con1: 3306
      ENGINE_con1: mysql@dbgate-plugin-mysql
    restart: unless-stopped



  # Data Exporter for the BLNSTATS server
  lnd-dbreader-exporter:
    container_name: lnd-dbreader-exporter
    image: lnd-dbreader-exporter
    build: ./exporter
    read_only: true
    volumes:
      # - /etc/localtime:/etc/localtime:ro   # OPTIONAL: Use local time
      - ./DATA:/DATA
    restart: unless-stopped



  # OPTIONAL: Zabbix service to monitor the data collection
  # # lnd-dbreader-zabbix:
  #   container_name: lnd-dbreader-zabbix
  #   read_only: true
  #   build:
  #     context: ./zabbix
  #     dockerfile: Dockerfile
  #   environment:
  #     ZABBIX_SERVER: <Zabbix Server IP>
  #     ZABBIX_PORT: 10051
  #     MYSQL_HOST: lnd-dbreader-mysql
  #     MYSQL_USER: lnd_data
  #     MYSQL_PASSWORD: lnd_data
  #     MYSQL_DATABASE: lnd_data
  #     TABLES_TO_CHECK: channel_announcements,node_announcements
  #   restart: unless-stopped


